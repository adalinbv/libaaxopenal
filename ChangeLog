* Tue Feb 24 2015 - tech@adalin.org
- Fix a problem when calling alcGetString with ALC_(CAPTURE_DEFAULT_)DEVICE_SPECIFIER: the results of aaxDriverGetSetup(config, AAX_RENDERER_STRING) should be cached before calling aaxDriverDestroy(config).
- Set the default distance model for emitters (again)
- Remove code that uses multiple audio-frames for threading, AeonWave now supports a different threading model which doesn't require this hack.

* Fri Oct 18 2013 - tech@adalin.org
- Add support for AL_DISTANCE_DELAY_AAX (requires AeonWave 2.3.0 or later).
- AeonWave-Lite only supports distance delayed starting/stopping of sources.
- AeonWave-HD also supports distance delayed state changes: position/orientation/velocity/pitch and gain.
- Add support for AL_SOFT_source_latency (requires AeonWave 2.2.0 or later).
- Switch to a function template model to minimize code maintenance.
- Make OpenAL fully thread-safe as required per specification.

* Tue Jul 31 2012 - tech@adalin.org
- Enabled multi-core support and add the posibility to disable it by specifying the environment variable OPENAL_ENABLE_MULTICORE=0

* Wed Jun 13 2012 - tech@adalin.org
- Added windows build support
- Added cpack module support

* Thu Apr 2 2012 - tech@adalin.org
- Proper support for 64-bit builds
- Add support for ALC_AAX_capture_loopback
- Add support for AL_EXT_source_distance_model
- Limit the gain values for AeonWave version 2.2
- Assorted small fixes for AeonWave version 2.2
- Fix a problem where buffers where improperly removed.

* Fri Nov 11 2011 - tech@adalin.org
- Move to CMake build system
- Fix an issue where calling alSourcei with AL_BUFFER and value 0 did not remove all attached buffers.

* Wed Dec 23 2009 - tech@adalin.org
- Split up the AeonWave library and the OpenAL support code


* Wed May 21 2008 - tech@adalin.org 
- Initial version following the Openal 1.1 specification

